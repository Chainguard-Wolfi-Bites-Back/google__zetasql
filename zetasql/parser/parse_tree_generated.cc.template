//
// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

#include "zetasql/parser/parse_tree.h"

#include <string>

#include "zetasql/base/logging.h"
#include "zetasql/parser/ast_node_kind.h"
#include "absl/container/flat_hash_map.h"
#include "zetasql/base/map_util.h"

namespace zetasql {

// Creates a map of ASTNodeKind to a string representation of the node type's
// name. Access this map through GetNodeNamesMap().
static absl::flat_hash_map<ASTNodeKind, std::string> CreateNodeNamesMap() {
  absl::flat_hash_map<ASTNodeKind, std::string> map;
  map[AST_FAKE] = "Fake";  // For testing purposes only.

# for node in nodes
  # if not node.is_abstract
  map[{{node.node_kind}}] = "{{node.name[3:]}}";
  # endif
# endfor
{{blank_line}}
  for (int kind = kFirstASTNodeKind; kind <= kLastASTNodeKind;
       ++kind) {
    ABSL_DCHECK(map.contains(static_cast<ASTNodeKind>(kind))) << "kind=" << kind;
  }
  return map;
}

// Returns a map of ASTNodeKind to a string representation of the node type's
// name.
static const absl::flat_hash_map<ASTNodeKind, std::string>& GetNodeNamesMap() {
  static const absl::flat_hash_map<ASTNodeKind, std::string>& map =
      *new auto(CreateNodeNamesMap());
  return map;
}

std::string ASTNode::NodeKindToString(ASTNodeKind node_kind) {
  // Subtle: we must ensure that default_value outlives the FindWithDefault
  // call.
  const std::string default_value = "<UNKNOWN NODE KIND>";

  return
zetasql_base::FindWithDefault(
      GetNodeNamesMap(), node_kind, default_value);
}

}  // namespace zetasql
